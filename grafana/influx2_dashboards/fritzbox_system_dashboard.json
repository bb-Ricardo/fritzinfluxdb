{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    },
    {
      "name": "VAR_MEASUREMENT",
      "type": "constant",
      "label": "InfluxDB measurement",
      "value": "fritzbox",
      "description": ""
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.2.2"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "logs",
      "name": "Logs",
      "version": ""
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "enable": true,
        "hide": false,
        "iconColor": "rgba(0, 211, 255, 1)",
        "mappings": {},
        "name": "Log annotations",
        "target": {
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._field == \"log_entry\" and r.box == \"$boxtag\" and r.log_type == \"Internet connection\" )\n  |> sort(columns: [\"_time\"], desc: true)\n  |> group(columns: [\"_measurement\"])\n  |> keep(columns:[\"_time\", \"_value\", \"log_type\"])",
          "refId": "annotation_query"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Monitor FRITZ!Box routers",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 713,
  "graphTooltip": 2,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "000000002"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 41,
      "panels": [],
      "title": "Overview",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "DSL Speed",
            "axisPlacement": "left",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/UP.*/"
            },
            "properties": [
              {
                "id": "custom.transform",
                "value": "negative-Y"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*Error.*/"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.fillOpacity",
                "value": 100
              },
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.axisLabel",
                "value": "Errors"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*Physical Max/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#64b0c8",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*DSL Sync/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*netto Max/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "UP"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "DOWN"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 47,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "finalMap = (tables=<-) => tables\n  |> map(fn: (r) =>  ({\n        r with _value:\n          if r._field =~ /.*rate$/ then r._value * 8.0\n          else if r._field =~ /.*dsl_sync_max$/ then r._value * 1000.0\n          else r._value,\n        _field:\n          if r._field == \"sendrate\" then \"UP\"\n          else if r._field == \"receiverate\" then \"DOWN\"\n          else if r._field == \"downstreammax\" then \"DOWN netto Max\"\n          else if r._field == \"downstreamphysicalmax\" then \"DOWN Physical Max\"\n          else if r._field == \"downstream_dsl_sync_max\" then \"DOWN DSL Sync\"\n          else if r._field == \"upstreammax\" then \"UP netto Max\"\n          else if r._field == \"upstreamphysicalmax\" then \"UP Physical Max\"\n          else if r._field == \"upstream_dsl_sync_max\" then \"UP DSL Sync\"\n          else r._field\n        })\n      )\n\nfrom(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n        r._field == \"sendrate\" or\n        r._field == \"receiverate\" or\n        r._field == \"downstreammax\" or\n        r._field == \"downstream_dsl_sync_max\" or\n        r._field == \"downstreamphysicalmax\" or\n        r._field == \"upstreammax\" or\n        r._field == \"upstream_dsl_sync_max\" or\n        r._field == \"upstreamphysicalmax\"\n    )\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> finalMap()\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "sendrate"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "*8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "UP"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "receiverate"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "*8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "DOWN"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "downstreammax"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "DOWN netto Max"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "downstream_dsl_sync_max"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "*1000"
                ],
                "type": "math"
              },
              {
                "params": [
                  "DOWN DSL Sync"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "downstreamphysicalmax"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "DOWN Physical Max"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "upstreammax"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "UP netto Max"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "upstream_dsl_sync_max"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "*1000"
                ],
                "type": "math"
              },
              {
                "params": [
                  "UP DSL Sync"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "upstreamphysicalmax"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "UP Physical Max"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "crc_errors"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "$__interval"
                ],
                "type": "non_negative_derivative"
              },
              {
                "params": [
                  "CRC Errors"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "errored_seconds"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "$__interval"
                ],
                "type": "non_negative_derivative"
              },
              {
                "params": [
                  "Errored Seconds"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "severely_errored_seconds"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "$__interval"
                ],
                "type": "non_negative_derivative"
              },
              {
                "params": [
                  "Severely Errored Seconds"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "finalMap = (tables=<-) => tables\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"crc_errors\" then \"CRC Errors\"\n          else if r._field == \"errored_seconds\" then \"Errored Seconds\"\n          else if r._field == \"severely_errored_seconds\" then \"Severely Errored Seconds\"\n          else r._field\n        })\n      )\n\nfrom(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"$boxtag\" and \n    (\n        r._field == \"crc_errors\" or\n        r._field == \"errored_seconds\" or\n        r._field == \"severely_errored_seconds\"\n    )\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> derivative(unit: v.windowPeriod, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> finalMap()",
          "refId": "B"
        }
      ],
      "title": "Current UP/DOWN",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "hideTimeOverride": true,
      "id": 26,
      "options": {
        "dedupStrategy": "none",
        "enableLogDetails": true,
        "prettifyLogMessage": false,
        "showCommonLabels": false,
        "showLabels": false,
        "showTime": true,
        "sortOrder": "Descending",
        "wrapLogMessage": true
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "limit": "5",
          "measurement": "/^$measurement$/",
          "orderByTime": "DESC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"log_entry\" and r.log_type != \"FritzInfluxDB\")\n  |> sort(columns: [\"_time\"], desc: true)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"log_type\"])\n  |> limit(n:5, offset: 0)\n",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "log_entry"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "timeFrom": "7d",
      "title": "Last 5 Log Entries",
      "transformations": [],
      "type": "logs"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "Is there a Fritz!OS update available",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "mappings": [
            {
              "options": {
                "false": {
                  "color": "dark-blue",
                  "index": 2,
                  "text": "No"
                },
                "true": {
                  "color": "dark-green",
                  "index": 1,
                  "text": "Yes"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "color": "semi-dark-yellow",
                  "index": 0,
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#6ed0e0",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 17
      },
      "id": 10,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^_value$/",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r[\"_field\"] == \"upgrade_available\" and r.box == \"${boxtag}\")\n  |> last()\n  |> keep(columns: [\"_value\"])",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "upgrade_available"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [],
          "target": ""
        }
      ],
      "title": "Update",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Disconnected"
                },
                "1": {
                  "text": "Connected"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "#1f78c1",
                "value": 1
              }
            ]
          },
          "unit": "dtdurations"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 2,
        "y": 17
      },
      "hideTimeOverride": true,
      "id": 9,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r[\"_field\"] == \"linkuptime\" and r.box == \"${boxtag}\")\n  |> last()\n  |> keep(columns: [\"_value\"])",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "linkuptime"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ],
          "target": ""
        }
      ],
      "timeFrom": "5m",
      "title": "DSL Link Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "decimals": 1,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": null
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 6,
        "y": 17
      },
      "id": 11,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^receiverate$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": false
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n        r._field == \"receiverate\" or\n        r._field == \"downstreammax\"\n    )\n  )\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()\n  |> map(fn: (r) =>  ({\n    r with _value:\n      if r._field == \"receiverate\" then r._value * 8\n      else r._value,\n    })\n  )\n",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "receiverate"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "*8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "current"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "downstreammax"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "max"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [],
          "target": ""
        }
      ],
      "title": "Current Download",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "decimals": 1,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": null
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 9,
        "y": 17
      },
      "id": 12,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^sendrate$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": false
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n        r._field == \"sendrate\" or\n        r._field == \"upstreammax\"\n    )\n  )\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> last()\n  |> map(fn: (r) =>  ({\n    r with _value:\n      if r._field == \"sendrate\" then r._value * 8\n      else r._value,\n    })\n  )\n",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "sendrate"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "*8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "current"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "upstreammax"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "max"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ],
          "target": ""
        }
      ],
      "title": "Current Upload",
      "transformations": [],
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 90
              },
              {
                "color": "orange",
                "value": 105
              },
              {
                "color": "red",
                "value": 120
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 12,
        "y": 17
      },
      "id": 30,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r[\"_field\"] == \"cpu_temp\" and r.box == \"${boxtag}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "cpu_temp"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "CPU Temp",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 75
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 14,
        "y": 17
      },
      "id": 33,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"cpu_utilization\" )\n  |> last()\n  |> keep(columns: [\"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "cpu_utilization"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "CPU Utilization",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 75
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 16,
        "y": 17
      },
      "id": 34,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "// SELECT last(\"ram_usage_fixed\") + last(\"ram_usage_dynamic\") FROM /^$measurement$/ WHERE (\"box\" =~ /^$boxtag$/) AND $timeFilter GROUP BY time($__interval) fill(linear)\nfrom(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n      r._field == \"ram_usage_fixed\" or r._field == \"ram_usage_dynamic\"\n    )\n  )\n  |> last()\n  |> keep(columns: [\"_value\"])",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "ram_usage_fixed"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "RAM Utilization",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#e24d42",
            "mode": "fixed"
          },
          "decimals": 3,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-red",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 18,
        "y": 17
      },
      "hideTimeOverride": true,
      "id": 16,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "fritzbox_value",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"timezone\"\noption location = timezone.location(name: \"${timezone}\")\nfrom(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"totalbytessent\" )\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> cumulativeSum(columns: [\"_value\"])\n  |> aggregateWindow(every: 15m, fn: last, createEmpty: false)\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type_instance",
              "operator": "=",
              "value": "totalbytesreceived"
            }
          ],
          "target": ""
        }
      ],
      "timeFrom": "1d",
      "title": "Last 24h Upload",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(31, 120, 193)",
            "mode": "fixed"
          },
          "decimals": 3,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 21,
        "y": 17
      },
      "hideTimeOverride": true,
      "id": 15,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "fritzbox_value",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"timezone\"\noption location = timezone.location(name: \"${timezone}\")\nfrom(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"totalbytesreceived\" )\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> cumulativeSum(columns: [\"_value\"])\n  |> aggregateWindow(every: 15m, fn: last, createEmpty: false)\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "type_instance",
              "operator": "=",
              "value": "totalbytesreceived"
            }
          ],
          "target": ""
        }
      ],
      "timeFrom": "1d",
      "title": "Last 24h Download",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-blue",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 19
      },
      "id": 37,
      "interval": "2m",
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "alias": "$tag_name",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "linear"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r[\"_field\"] == \"num_active_host\" and r.box == \"${boxtag}\")\n  |> last()\n  |> keep(columns: [\"_value\"])",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "num_active_host"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "Active hosts",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Disconnected"
                },
                "1": {
                  "text": "Connected"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 1
              },
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": 1
              }
            ]
          },
          "unit": "dtdurations"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 2,
        "y": 19
      },
      "hideTimeOverride": true,
      "id": 13,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement}\" and r[\"_field\"] == \"systemuptime\" and r.box == \"${boxtag}\")\n  |> last()\n  |> keep(columns: [\"_value\"])",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "systemuptime"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ],
          "target": ""
        }
      ],
      "timeFrom": "5m",
      "title": "System Uptime",
      "type": "stat"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "000000002"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 39,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "hue",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "links": [],
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "decbytes"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "totalbytesreceived"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#1f78c1",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Download"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "totalbytessent"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#e24d42",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Upload"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 22
          },
          "id": 2,
          "interval": "10s",
          "links": [],
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "import \"date\"\nimport \"timezone\"\noption location = timezone.location(name: \"${timezone}\")\nfrom(bucket: v.defaultBucket)\n  |> range(start: -7d, stop: date.add(d: 1d, to: date.truncate(t: now(), unit: 1d)))\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and \n    (\n      r._field == \"totalbytesreceived\" or\n      r._field == \"totalbytessent\"\n    )\n  )\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> fill(column: \"_value\", usePrevious: true)\n  |> cumulativeSum(columns: [\"_value\"])\n  |> aggregateWindow(every: 1d, fn: last, createEmpty: false)\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> truncateTimeColumn(unit: 1h)\n  |> timeShift(duration: -1d, columns: [\"_time\"])\n\n",
              "refId": "B"
            }
          ],
          "timeFrom": "7d",
          "title": "Daily Traffic",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 100,
                "gradientMode": "hue",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepAfter",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "links": [],
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "decbytes"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "totalbytesreceived"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#1F78C1",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Download"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "totalbytessent"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#EA6460",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Upload"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 22
          },
          "id": 17,
          "interval": "1h",
          "links": [],
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "pluginVersion": "8.4.4",
          "targets": [
            {
              "alias": "Download",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "dsType": "influxdb",
              "fields": [
                {
                  "func": "mean",
                  "name": "value"
                }
              ],
              "groupBy": [
                {
                  "params": [
                    "$interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "groupByTags": [],
              "measurement": "fritzbox_value",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "import \"date\"\nfrom(bucket: v.defaultBucket)\n  |> range(start: -1d, stop: date.add(d: 1h, to: date.truncate(t: now(), unit: 1h)))\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and \n    (\n      r._field == \"totalbytesreceived\" or \n      r._field == \"totalbytessent\"\n    )\n  )\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> cumulativeSum(columns: [\"_value\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> drop(columns: [\"box\", \"_measurement\"])\n  |> truncateTimeColumn(unit: 1h)\n  |> timeShift(duration: -1h)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "type_instance",
                  "operator": "=",
                  "value": "totalbytesreceived"
                }
              ],
              "target": "alias(summarize(nonNegativeDerivative(collectd.squirrel.fritzbox.bytes-totalbytesreceived, 0), '1h', 'sum'), 'download')"
            }
          ],
          "timeFrom": "1d",
          "title": "Current Traffic",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "decimals": 2,
              "displayName": "",
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "decbytes"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Time"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Time"
                  },
                  {
                    "id": "unit",
                    "value": "time: MMMM D, YYYY LT"
                  },
                  {
                    "id": "custom.align"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "totalbytesreceived"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Download"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "totalbytessent"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Upload"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 30
          },
          "id": 14,
          "links": [],
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "9.2.2",
          "targets": [
            {
              "alias": "Download",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "dsType": "influxdb",
              "groupBy": [
                {
                  "params": [
                    "1d"
                  ],
                  "type": "time"
                }
              ],
              "measurement": "fritzbox_value",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "import \"timezone\"\noption location = timezone.location(name: \"${timezone}\")\nfrom(bucket: v.defaultBucket)\n  |> range(start: -7d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and \n    (\n      r._field == \"totalbytesreceived\" or\n      r._field == \"totalbytessent\"\n    )\n  )\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> fill(column: \"_value\", usePrevious: true)\n  |> cumulativeSum(columns: [\"_value\"])\n  |> aggregateWindow(every: 1d, fn: last, createEmpty: false)\n  |> timeShift(duration: -1ns, columns: [\"_time\"])\n  |> difference(nonNegative: true, columns: [\"_value\"])\n  |> drop(columns: [\"box\", \"_measurement\"])\n  |> truncateTimeColumn(unit: 1m)\n  |> timeShift(duration: 1ns, columns: [\"_time\"])",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  },
                  {
                    "params": [
                      "10s"
                    ],
                    "type": "non_negative_derivative"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "type_instance",
                  "operator": "=",
                  "value": "totalbytesreceived"
                }
              ],
              "target": ""
            }
          ],
          "timeFrom": "7d",
          "title": "Daily Traffic",
          "transformations": [
            {
              "id": "seriesToColumns",
              "options": {
                "byField": "Time",
                "reducers": []
              }
            },
            {
              "id": "sortBy",
              "options": {
                "fields": {},
                "sort": [
                  {
                    "desc": true,
                    "field": "Time"
                  }
                ]
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#e24d42",
                "mode": "fixed"
              },
              "decimals": 3,
              "mappings": [
                {
                  "options": {
                    "match": "null",
                    "result": {
                      "text": "N/A"
                    }
                  },
                  "type": "special"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 12,
            "y": 30
          },
          "hideTimeOverride": true,
          "id": 8,
          "links": [],
          "maxDataPoints": 100,
          "options": {
            "colorMode": "none",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.2.2",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "dsType": "influxdb",
              "groupBy": [],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"totalbytessent\" )\n  |> aggregateWindow(every: 15m, fn: last, createEmpty: false)",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "totalbytessent"
                    ],
                    "type": "field"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ],
              "target": ""
            }
          ],
          "timeFrom": "24h",
          "title": "Total Upload since connection",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "rgb(31, 120, 193)",
                "mode": "fixed"
              },
              "mappings": [
                {
                  "options": {
                    "match": "null",
                    "result": {
                      "text": "N/A"
                    }
                  },
                  "type": "special"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "decbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 12,
            "x": 12,
            "y": 34
          },
          "hideTimeOverride": true,
          "id": 3,
          "links": [],
          "maxDataPoints": 100,
          "options": {
            "colorMode": "none",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "9.2.2",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "dsType": "influxdb",
              "groupBy": [],
              "hide": false,
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"totalbytesreceived\" )\n  |> aggregateWindow(every: 15m, fn: last, createEmpty: false)\n",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "totalbytesreceived"
                    ],
                    "type": "field"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ],
              "target": ""
            }
          ],
          "timeFrom": "24h",
          "title": "Total Download since connection",
          "transformations": [],
          "type": "stat"
        }
      ],
      "title": "Traffic Stats",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "000000002"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 58,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "Num clients",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Total"
                },
                "properties": [
                  {
                    "id": "custom.stacking",
                    "value": {
                      "group": "A",
                      "mode": "none"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 3
          },
          "id": 55,
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /^wlan._associations$/)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n\n",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "wlan1_associations"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "2.4 GHz Clients"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan2_associations"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "5 GHz Clients"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan3_associations"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Guest Clients"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "WLAN Clients",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "mode": "reduceRow",
                "reduce": {
                  "include": [
                    "wlan1_associations",
                    "wlan2_associations",
                    "wlan3_associations"
                  ],
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Total": false
                },
                "indexByName": {},
                "renameByName": {
                  "Total": "",
                  "wlan1_associations": "2.4 GHz Clients",
                  "wlan2_associations": "5 GHz Clients",
                  "wlan3_associations": "Guest Clients"
                }
              }
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "WLAN channel",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineStyle": {
                  "fill": "solid"
                },
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "5 GHz"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 3
          },
          "id": 56,
          "options": {
            "legend": {
              "calcs": [
                "lastNotNull"
              ],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /^wlan._channel$/)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "wlan1_channel"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "2.4 GHz"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan2_channel"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "5 GHz"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan3_channel"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Guest"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "WLAN Channel",
          "transformations": [
            {
              "id": "calculateField",
              "options": {}
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Total": true
                },
                "indexByName": {},
                "renameByName": {
                  "Total": "",
                  "wlan1_channel": "2.4 GHz",
                  "wlan2_channel": "5 GHz",
                  "wlan3_channel": "Guest"
                }
              }
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 24,
            "x": 0,
            "y": 11
          },
          "id": 60,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "frameIndex": 10,
            "showHeader": true
          },
          "pluginVersion": "9.1.6",
          "targets": [
            {
              "alias": "2.4 GHz Status",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [],
              "hide": false,
              "limit": "1",
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "finalMap = (tables=<-) => tables\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field =~ /.*ssid/ then \"Name\"\n          else if r._field =~ /.*status/ then \"Status\"\n          else if r._field =~ /.*standard/ then \"Standard\"\n          else if r._field =~ /.*channel/ then \"Channel\"\n          else if r._field =~ /.*associations/ then \"Clients\"\n          else r._field\n        })\n      )\n\n\nfrom(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /^wlan1.*$/)\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> truncateTimeColumn(unit: 1h)\n  |> finalMap()\n",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "wlan1_ssid"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Name"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan1_status"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Status"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan1_802.11_standard"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Standard"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan1_channel"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Channel"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan1_associations"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Clients"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            },
            {
              "alias": "2.4 GHz Status",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [],
              "hide": false,
              "limit": "1",
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "finalMap = (tables=<-) => tables\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field =~ /.*ssid/ then \"Name\"\n          else if r._field =~ /.*status/ then \"Status\"\n          else if r._field =~ /.*standard/ then \"Standard\"\n          else if r._field =~ /.*channel/ then \"Channel\"\n          else if r._field =~ /.*associations/ then \"Clients\"\n          else r._field\n        })\n      )\n\n\nfrom(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /^wlan2.*$/)\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> truncateTimeColumn(unit: 1h)\n  |> finalMap()",
              "rawQuery": false,
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "wlan2_ssid"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Name"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan2_status"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Status"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan2_802.11_standard"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Standard"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan2_channel"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Channel"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan2_associations"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Clients"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            },
            {
              "alias": "2.4 GHz Status",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [],
              "hide": false,
              "limit": "1",
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "finalMap = (tables=<-) => tables\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field =~ /.*ssid/ then \"Name\"\n          else if r._field =~ /.*status/ then \"Status\"\n          else if r._field =~ /.*standard/ then \"Standard\"\n          else if r._field =~ /.*channel/ then \"Channel\"\n          else if r._field =~ /.*associations/ then \"Clients\"\n          else r._field\n        })\n      )\n\n\nfrom(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /^wlan3.*$/)\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> truncateTimeColumn(unit: 1h)\n  |> finalMap()\n",
              "rawQuery": false,
              "refId": "C",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "wlan3_ssid"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Name"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan3_status"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Status"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan3_802.11_standard"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Standard"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan3_channel"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Channel"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "wlan3_associations"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Clients"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "WLAN Info",
          "transformations": [
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true
                },
                "indexByName": {
                  "Channel": 4,
                  "Clients": 5,
                  "Name": 1,
                  "Standard": 3,
                  "Status": 2,
                  "Time": 0
                },
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "WLAN",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "000000002"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 43,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd",
                "seriesBy": "last"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 60,
                "gradientMode": "scheme",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "line"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "cpu_utilization"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "CPU Utilization"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 4
          },
          "id": 45,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "CPU Utilization",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"cpu_utilization\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "cpu_utilization"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "CPU Utilization",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 27,
                "gradientMode": "hue",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "percent"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "ram_usage_fixed"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#268edf",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Fixed"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ram_usage_dynamic"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#d9a542",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Dynamic"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "ram_usage_free"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#71ab4b",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Free"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 4
          },
          "id": 49,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"ram_usage_fixed\" )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "ram_usage_fixed"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Fixed"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "ram_usage_dynamic"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Dynamic"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "ram_usage_free"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Free"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"ram_usage_dynamic\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"ram_usage_free\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n",
              "refId": "C"
            }
          ],
          "title": "RAM usage",
          "transformations": [],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-GrYlRd"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 25,
                "gradientMode": "scheme",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 115
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 12
          },
          "id": 51,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "CPU Temp",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"cpu_temp\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n\n",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "cpu_temp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "CPU Temperature",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "#EAB839",
                    "value": 100
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 12
          },
          "id": 53,
          "options": {
            "displayMode": "lcd",
            "minVizHeight": 10,
            "minVizWidth": 0,
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {
              "titleSize": 12,
              "valueSize": 12
            }
          },
          "pluginVersion": "9.1.6",
          "targets": [
            {
              "alias": "$tag_name",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "name"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"energy_consumption\")\n  |> last()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "energy_consumption"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "System Energy Consumption",
          "transformations": [
            {
              "id": "renameByRegex",
              "options": {
                "regex": ".*name=\"(.*)\"}",
                "renamePattern": "$1"
              }
            }
          ],
          "type": "bargauge"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "color-background",
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "noValue": "None",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-yellow"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Metric"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 200
                  },
                  {
                    "id": "custom.displayMode",
                    "value": "color-background"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#4991f2",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 21
          },
          "hideTimeOverride": true,
          "id": 20,
          "interval": "",
          "links": [],
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "frameIndex": 2,
            "showHeader": false
          },
          "pluginVersion": "9.1.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [],
              "hide": false,
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n      r._field == \"external_ip\" or\n      r._field == \"external_ipv6\" or\n      r._field == \"model\" or\n      r._field == \"serialnumber\" or\n      r._field == \"softwareversion\" or\n      r._field == \"last_auth_error\" or\n      r._field == \"myfritz_host_name\"\n    ) \n  )\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\"])\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"external_ip\" then \"IPv4\"\n          else if r._field == \"external_ipv6\" then \"IPv6\"\n          else if r._field == \"model\" then \"Model\"\n          else if r._field == \"serialnumber\" then \"Serial\"\n          else if r._field == \"softwareversion\" then \"SW Version\"\n          else if r._field == \"last_auth_error\" then \"Last Auth Error\"\n          else if r._field == \"myfritz_host_name\" then \"MyFritz Hostname\"\n          else r._field\n        })\n      )\n",
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "external_ip"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "IPv4"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "FritzBox Info",
          "transformations": [
            {
              "id": "labelsToFields",
              "options": {
                "mode": "columns"
              }
            },
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Time": true
                },
                "indexByName": {
                  "_field": 0,
                  "_value": 1
                },
                "renameByName": {
                  "_field": "Metric",
                  "_value": "Value"
                }
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "color-background",
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-yellow"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Metric"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 200
                  },
                  {
                    "id": "custom.displayMode",
                    "value": "color-background"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "#4991f2",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 21
          },
          "hideTimeOverride": true,
          "id": 74,
          "interval": "",
          "links": [],
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": false
          },
          "pluginVersion": "9.1.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [],
              "hide": false,
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n      r._field == \"physicallinktype\" or\n      r._field == \"dsl_line_length\" or\n      r._field == \"dsl_dslam_vendor\" or\n      r._field == \"dsl_dslam_sw_version\" or\n      r._field == \"dsl_line_mode\" or\n      r._field == \"cable_cmts_vendor\" or\n      r._field == \"cable_line_mode\" or\n      r._field == \"cable_modem_version\" or\n      r._field == \"cable_num_ds_channels\" or\n      r._field == \"cable_num_us_channels\" or\n      r._field == \"connection_status\" or\n      r._field == \"last_connection_error\" or\n      r._field == \"remote_pop\"\n    ) \n  )\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\"])\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"physicallinktype\" then \"Link Type\"\n          else if r._field == \"dsl_line_length\" then \"DSL Line Length\"\n          else if r._field == \"dsl_dslam_vendor\" then \"DSL DSLAM Vendor\"\n          else if r._field == \"dsl_dslam_sw_version\" then \"DSL Model Version\"\n          else if r._field == \"dsl_line_mode\" then \"DSL Line Mode\"\n          else if r._field == \"cable_cmts_vendor\" then \"Cable Vendor\"\n          else if r._field == \"cable_line_mode\" then \"Cable Line Mode\"\n          else if r._field == \"cable_modem_version\" then \"Cable Modem Version\"\n          else if r._field == \"cable_num_ds_channels\" then \"Cable Downstream Channels\"\n          else if r._field == \"cable_num_us_channels\" then \"Cable Upstream Channels\"\n          else if r._field == \"connection_status\" then \"Connection Status\"\n          else if r._field == \"last_connection_error\" then \"Last Connection Error\"\n          else if r._field == \"remote_pop\" then \"Remote Pop\"\n          else r._field\n        })\n      )\n",
              "refId": "B",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "physicallinktype"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Link Type"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "Connection Info",
          "transformations": [
            {
              "id": "labelsToFields",
              "options": {}
            },
            {
              "id": "merge",
              "options": {}
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "_field": 0,
                  "_value": 1
                },
                "renameByName": {
                  "_field": "Metric",
                  "_value": "Value"
                }
              }
            },
            {
              "id": "filterByValue",
              "options": {
                "filters": [
                  {
                    "config": {
                      "id": "regex",
                      "options": {
                        "value": "Cable.*Channels"
                      }
                    },
                    "fieldName": "Metric"
                  },
                  {
                    "config": {
                      "id": "equal",
                      "options": {
                        "value": "0"
                      }
                    },
                    "fieldName": "Value"
                  }
                ],
                "match": "all",
                "type": "exclude"
              }
            },
            {
              "id": "filterByValue",
              "options": {
                "filters": [
                  {
                    "config": {
                      "id": "regex",
                      "options": {
                        "value": "^Cable.*"
                      }
                    },
                    "fieldName": "Metric"
                  },
                  {
                    "config": {
                      "id": "isNull",
                      "options": {}
                    },
                    "fieldName": "Value"
                  }
                ],
                "match": "all",
                "type": "exclude"
              }
            },
            {
              "id": "filterByValue",
              "options": {
                "filters": [
                  {
                    "config": {
                      "id": "regex",
                      "options": {
                        "value": "^DSL.*"
                      }
                    },
                    "fieldName": "Metric"
                  },
                  {
                    "config": {
                      "id": "greater",
                      "options": {
                        "value": 0
                      }
                    },
                    "fieldName": "Value"
                  }
                ],
                "match": "all",
                "type": "exclude"
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "System Infos",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "000000002"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 70,
      "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 39,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 17,
        "x": 0,
            "y": 5
      },
      "id": 64,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "alias": "Num Users",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and (r._field == \"vpn_user_num_active\" or r._field == \"vpn_user_num_active_ipsec\" or r._field == \"vpn_user_num_active_wg\"))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\"])\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"vpn_user_num_active\" then \"Active User\"\n          else if r._field == \"vpn_user_num_active_ipsec\" then \"Active User - IPSec\"\n          else if r._field == \"vpn_user_num_active_wg\" then \"Active User - WireGuard\"\n          else r._field\n        })\n      )",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "vpn_user_num_active"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "Active VPN User",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 17,
            "y": 5
      },
      "id": 68,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false
      },
          "pluginVersion": "9.1.6",
      "targets": [
        {
          "alias": "MyFritz Hostname",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n      r._field == \"myfritz_host_name\" or\n      r._field == \"vpn_type\" or\n      r._field == \"vpn_user_num_active\" or\n      r._field == \"myfritz_host_name_ipsec\" or\n      r._field == \"vpn_type_ipsec\" or\n      r._field == \"vpn_user_num_active_ipsec\" or\n      r._field == \"myfritz_host_name_wg\" or\n      r._field == \"vpn_type_wg\" or\n      r._field == \"vpn_user_num_active_wg\"\n    ) \n  )\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\"])\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"myfritz_host_name\" then \"MyFritz Hostname\"\n          else if r._field == \"vpn_type\" then \"VPN Type\"\n          else if r._field == \"vpn_user_num_active\" then \"VPN User Active\"\n          else if r._field == \"myfritz_host_name_ipsec\" then \"MyFritz Hostname\"\n          else if r._field == \"vpn_type_ipsec\" then \"VPN Type - IPSec\"\n          else if r._field == \"vpn_user_num_active_ipsec\" then \"VPN User Active - IPSec\"\n          else if r._field == \"myfritz_host_name_wg\" then \"MyFritz Hostname\"\n          else if r._field == \"vpn_type_wg\" then \"VPN Type - WireGuard\"\n          else if r._field == \"vpn_user_num_active_wg\" then \"VPN User Active - WireGuard\"\n          else r._field\n        })\n      )\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "myfritz_host_name"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "VPN Infos",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns"
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "indexByName": {
              "_field": 0,
              "_value": 1
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
            "y": 13
      },
      "id": 62,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false
      },
          "pluginVersion": "9.1.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n      r._field == \"ddns_domain\" or\n      r._field == \"ddns_enabled\" or\n      r._field == \"ddns_mode\" or\n      r._field == \"ddns_provider_name\" or\n      r._field == \"ddns_status_ipv4\" or\n      r._field == \"ddns_status_ipv6\"\n    ) \n  )\n  |> last()\n  |> toString()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\"])\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"ddns_domain\" then \"Domain\"\n          else if r._field == \"ddns_enabled\" then \"Enabled\"\n          else if r._field == \"ddns_mode\" then \"Mode\"\n          else if r._field == \"ddns_provider_name\" then \"Provider\"\n          else if r._field == \"ddns_status_ipv4\" then \"Status IPv4\"\n          else if r._field == \"ddns_status_ipv6\" then \"Status IPv6\"\n          else r._field\n        })\n      )\n",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "ddns_domain"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Domain"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "hide": false,
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "ddns_enabled"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Enabled"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "hide": false,
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "C",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "ddns_mode"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Mode"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "hide": false,
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "D",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "ddns_provider_name"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Provider"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "hide": false,
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "E",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "ddns_status_ipv4"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Status IPv4"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [],
          "hide": false,
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "F",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "ddns_status_ipv6"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Status IPv6"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "DynDNS Info",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {}
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "indexByName": {
              "_field": 0,
              "_value": 1
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Connected"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "False": {
                        "color": "light-blue",
                        "index": 1
                      },
                      "True": {
                        "color": "light-green",
                        "index": 0
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Name"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 15,
        "x": 9,
            "y": 13
      },
      "id": 66,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 1,
        "showHeader": true
      },
          "pluginVersion": "9.1.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "name"
              ],
              "type": "tag"
            }
          ],
          "limit": "1",
          "measurement": "/^$measurement$/",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and\n    (\n      r._field == \"vpn_user_active\" or\n      r._field == \"vpn_user_connected\" or\n      r._field == \"vpn_user_virtual_address\" or\n      r._field == \"vpn_user_remote_address\" or\n      r._field == \"vpn_user_active_ipsec\" or\n      r._field == \"vpn_user_connected_ipsec\" or\n      r._field == \"vpn_user_virtual_address_ipsec\" or\n      r._field == \"vpn_user_remote_address_ipsec\" or\n      r._field == \"vpn_user_active_wg\" or\n      r._field == \"vpn_user_connected_wg\" or\n      r._field == \"vpn_user_virtual_address_wg\" or\n      r._field == \"vpn_user_remote_address_wg\"\n    ) \n  )\n  |> last()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\"])\n  |> map(fn: (r) =>  ({\n        r with _field:\n          if r._field == \"name\" then \"Name\"\n          else if r._field == \"vpn_user_active\" then \"Active\"\n          else if r._field == \"vpn_user_connected\" then \"Connected\"\n          else if r._field == \"vpn_user_virtual_address\" then \"Virtual Address\"\n          else if r._field == \"vpn_user_remote_address\" then \"Remote Address\"\n          else if r._field == \"vpn_user_active_ipsec\" then \"Active\"\n          else if r._field == \"vpn_user_connected_ipsec\" then \"Connected\"\n          else if r._field == \"vpn_user_virtual_address_ipsec\" then \"Virtual Address\"\n          else if r._field == \"vpn_user_remote_address_ipsec\" then \"Remote Address\"\n          else if r._field == \"vpn_user_active_wg\" then \"Active\"\n          else if r._field == \"vpn_user_connected_wg\" then \"Connected\"\n          else if r._field == \"vpn_user_virtual_address_wg\" then \"Virtual Address\"\n          else if r._field == \"vpn_user_remote_address_wg\" then \"Remote Address\"\n          else r._field\n        })\n      )\n",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "vpn_user_active"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Active"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "vpn_user_connected"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Connected"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "vpn_user_virtual_address"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Virtual Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "vpn_user_remote_address"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Remote Address"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "box",
              "operator": "=~",
              "value": "/^$boxtag$/"
            }
          ]
        }
      ],
      "title": "VPN User Overview",
      "transformations": [
        {
          "id": "joinByLabels",
          "options": {
            "value": "_field"
          }
        }
      ],
      "type": "table"
        }
      ],
      "title": "VPN and DynDNS Info",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "000000002"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 28,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Last seen"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 185
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Type"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 89
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Mac"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 138
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "IPv4"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 131
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Port"
                },
                "properties": [
                  {
                    "id": "custom.filterable",
                    "value": true
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Type"
                },
                "properties": [
                  {
                    "id": "custom.filterable",
                    "value": true
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 18,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 72,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "Name"
              }
            ]
          },
          "pluginVersion": "9.1.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "uid"
                  ],
                  "type": "tag"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /active_hosts_(name|mac|type|parent|port|ipv4.*|additional_text)/ )\n  |> last()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\", \"name\"])\n",
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "active_hosts_name"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Name"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "active_hosts_mac"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Mac"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "active_hosts_type"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Type"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "active_hosts_port"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Port"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "active_hosts_ipv4"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "IPv4"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "active_hosts_ipv4_last_used"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "*1000"
                    ],
                    "type": "math"
                  },
                  {
                    "params": [
                      "Last seen"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "active_hosts_additional_text"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Info"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "Active Hosts",
          "transformations": [
            {
              "id": "joinByLabels",
              "options": {
                "value": "_field"
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "active_hosts_ipv4_last_seen",
                "binary": {
                  "left": "active_hosts_ipv4_last_used",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "1000"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "convertFieldType",
              "options": {
                "conversions": [
                  {
                    "dateFormat": "X",
                    "destinationType": "time",
                    "targetField": "active_hosts_ipv4_last_seen"
                  }
                ],
                "fields": {}
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Last seen": false,
                  "Last seen 2": false,
                  "Parent": true,
                  "Time": true,
                  "active_hosts_ipv4_last_used": true,
                  "uid": true
                },
                "indexByName": {
                  "active_hosts_additional_text": 7,
                  "active_hosts_ipv4": 2,
                  "active_hosts_ipv4_last_seen": 4,
                  "active_hosts_ipv4_last_used": 9,
                  "active_hosts_mac": 3,
                  "active_hosts_name": 1,
                  "active_hosts_parent": 8,
                  "active_hosts_port": 6,
                  "active_hosts_type": 5,
                  "uid": 0
                },
                "renameByName": {
                  "Last seen": "",
                  "Last seen * 1000": "Last Seen",
                  "Last seen 2": "",
                  "Type": "",
                  "active_hosts_additional_text": "Info",
                  "active_hosts_ipv4": "IPv4",
                  "active_hosts_ipv4_last_seen": "Last seen",
                  "active_hosts_ipv4_last_used": "",
                  "active_hosts_mac": "Mac",
                  "active_hosts_name": "Name",
                  "active_hosts_parent": "Parent",
                  "active_hosts_port": "Port",
                  "active_hosts_type": "Type"
                }
              }
            },
            {
              "id": "sortBy",
              "options": {
                "fields": {},
                "sort": [
                  {
                    "field": "Name"
                  }
                ]
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 17,
            "w": 24,
            "x": 0,
            "y": 24
          },
          "id": 73,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "9.1.6",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "uid"
                  ],
                  "type": "tag"
                }
              ],
              "measurement": "/^$measurement$/",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\n  |> range(start: -1h)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field =~ /passive_hosts_.*/ )\n  |> last()\n  |> drop(columns: [\"box\", \"_measurement\", \"_start\", \"_stop\", \"_time\"])\n",
              "refId": "A",
              "resultFormat": "table",
              "select": [
                [
                  {
                    "params": [
                      "passive_hosts_name"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Name"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "passive_hosts_mac"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Mac"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "passive_hosts_port"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "Port"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "passive_hosts_ipv4"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  },
                  {
                    "params": [
                      "IPv4"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "box",
                  "operator": "=~",
                  "value": "/^$boxtag$/"
                }
              ]
            }
          ],
          "title": "Passive Hosts",
          "transformations": [
            {
              "id": "joinByLabels",
              "options": {
                "value": "_field"
              }
            },
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "Parent": true,
                  "Time": true,
                  "uid": true
                },
                "indexByName": {
                  "passive_hosts_ipv4": 2,
                  "passive_hosts_mac": 3,
                  "passive_hosts_name": 1,
                  "passive_hosts_port": 4,
                  "uid": 0
                },
                "renameByName": {
                  "passive_hosts_ipv4": "IPv4",
                  "passive_hosts_mac": "MAC",
                  "passive_hosts_name": "Name",
                  "passive_hosts_port": "Port"
                }
              }
            },
            {
              "id": "sortBy",
              "options": {
                "fields": {},
                "sort": [
                  {
                    "field": "Name"
                  }
                ]
              }
            }
          ],
          "type": "table"
        }
      ],
      "title": "Network Hosts",
      "type": "row"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "description": "Measurement name for the fritzflux data",
        "hide": 2,
        "label": "InfluxDB measurement",
        "name": "measurement",
        "query": "${VAR_MEASUREMENT}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_MEASUREMENT}",
          "text": "${VAR_MEASUREMENT}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_MEASUREMENT}",
            "text": "${VAR_MEASUREMENT}",
            "selected": false
          }
        ]
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"$measurement\" and r._field == \"linkuptime\")\n  |> keyValues(keyColumns: [\"box\"])\n  |> group()\n  |> keep(columns: [\"box\"])\n  |> distinct(column: \"box\")",
        "hide": 0,
        "includeAll": false,
        "label": "FritzBox",
        "multi": false,
        "name": "boxtag",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"$measurement\" and r._field == \"linkuptime\")\n  |> keyValues(keyColumns: [\"box\"])\n  |> group()\n  |> keep(columns: [\"box\"])\n  |> distinct(column: \"box\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": "",
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"sampledata\"\nimport \"date\"\n// generate default timezone entry\ndefault = sampledata.string()\n  |> map(fn: (r) => ({_value: \"Europe/Berlin\", _time: date.time(t: 1990-01-01) }))\n  |> last()\n\n// query actual entry\nquery = from(bucket: v.defaultBucket)\n  |> range(start: -2d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"fritzinfluxdb_setting_timezone\")\n  |> last()\n  |> keep(columns: [\"_time\", \"_value\"])\n\n// join result and keep the latest (query) result\nunion(tables: [default, query])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> last()\n",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "timezone",
        "options": [],
        "query": "import \"sampledata\"\nimport \"date\"\n// generate default timezone entry\ndefault = sampledata.string()\n  |> map(fn: (r) => ({_value: \"Europe/Berlin\", _time: date.time(t: 1990-01-01) }))\n  |> last()\n\n// query actual entry\nquery = from(bucket: v.defaultBucket)\n  |> range(start: -2d)\n  |> filter(fn: (r) => r._measurement == \"${measurement}\" and r.box == \"${boxtag}\" and r._field == \"fritzinfluxdb_setting_timezone\")\n  |> last()\n  |> keep(columns: [\"_time\", \"_value\"])\n\n// join result and keep the latest (query) result\nunion(tables: [default, query])\n  |> sort(columns: [\"_time\"], desc: false)\n  |> last()\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-12h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "FRITZ!Box Router Status",
  "uid": "fritzbox-system-flux",
  "version": 5,
  "weekStart": ""
}